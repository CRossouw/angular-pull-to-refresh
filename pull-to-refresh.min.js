/**
 * ngPullToRefresh - CSS3 pull-to-refresh directive for AngularJS
 * @version v0.2.0 - 2013-06-17
 * @link http://mgcrea.github.com/angular-pull-to-refresh
 * @author Olivier Louvignes <olivier@mg-crea.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";angular.module("mgcrea.pullToRefresh",[]).directive("pullToRefresh",function(e,s,n){var t=""+'<div class="ptr" ng-class="\'ptr-\'+status">'+"<i class=\"icon-refresh\" ng-class=\"{'icon-arrow-down':status==='pull', 'icon-arrow-up':status==='release', 'icon-refresh icon-spin':status==='loading'}\"></i>"+'&nbsp;<span class="ptr-message">{{messages[status]}}</span>'+"</div>";var a={debounce:400,messages:{pull:"pull to refresh",release:"release to refresh",loading:"refreshing..."}};return{restrict:"A",scope:true,compile:function r(r,o,u){r.prepend(t);var l=r.find(".pull-to-refresh");return function i(t,r,o,u){t.$loading=false;t.messages=a.messages;t.status="pull";var i=20;var c=-2*i+"px auto 0";s(function(){e(l)(t)});r.bind("touchstart",function(e){var s=r[0].scrollTop});var p=false;r.bind("touchmove",function(e){var s=r[0].scrollTop;if(s<-40&&!p){p=true;t.$apply(function(){t.status="release"})}else if(s>-40&&p){p=false;t.$apply(function(){t.status="pull"})}});r.bind("touchend",function(e){var u=r[0].scrollTop;if(!p)return;t.$apply(function(){t.$loading=true;t.status="loading";var e=+new Date;n.when(t.$eval(o.pullToRefresh)).then(function(){var n=+new Date-e;s(function(){t.$loading=false;t.status="pull"},n<a.debounce?a.debounce-n:0)})})});t.$on("$destroy",function(){r.unbind("touchstart");r.unbind("touchmove");r.unbind("touchend")})}}}});